include_directories(${UT_INCLUDE_DIRECTORIES})

if(BUILD_SHARED_LIBS)
  add_definitions("-DGTEST_LINKED_AS_SHARED_LIBRARY=1")
endif()

# LY: reduce compilation time (significantly on Elbrus)
if(NOT CMAKE_BUILD_TYPE STREQUAL "Debug"
    AND NOT CMAKE_INTERPROCEDURAL_OPTIMIZATION AND NOT LTO_ENABLED)
  if (CC_HAS_OMINIMAL)
    add_compile_options("-Ominimal")
  elseif(CMAKE_COMPILER_IS_CLANG OR CMAKE_COMPILER_IS_GNUCC)
    add_compile_options("-O1")
  endif()
endif()

if(${CMAKE_SYSTEM_NAME} STREQUAL "Windows" OR CMAKE_BUILD_TYPE STREQUAL "Debug")
  set(fptu0_trivia_timeout 60)
  set(fptu5_remove_timeout 120)
  set(fptu6_shrink_timeout 120)
  set(fptu7_compare_timeout 1500)
  set(fptu8_emit_timeout 180)
else()
  set(fptu0_trivia_timeout 10)
  set(fptu5_remove_timeout 60)
  set(fptu6_shrink_timeout 60)
  set(fptu7_compare_timeout 500)
  set(fptu8_emit_timeout 60)
endif()

add_ut(fptu0_trivia TIMEOUT ${fptu0_trivia_timeout} SOURCE 0trivia.cxx LIBRARY fptu)
add_ut(fptu1_create TIMEOUT 5 SOURCE 1create.cxx LIBRARY fptu)
add_ut(fptu2_upsert TIMEOUT 5 SOURCE 2upsert.cxx LIBRARY fptu)
add_ut(fptu3_iterate TIMEOUT 5 SOURCE 3iterate.cxx LIBRARY fptu)
add_ut(fptu4_fetch TIMEOUT 5 SOURCE 4fetch.cxx LIBRARY fptu)
add_ut(fptu5_remove TIMEOUT ${fptu5_remove_timeout} SOURCE 5remove.cxx shuffle6.hpp LIBRARY fptu)
add_ut(fptu6_shrink TIMEOUT ${fptu6_shrink_timeout} SOURCE 6shrink.cxx shuffle6.hpp LIBRARY fptu)
add_ut(fptu7_compare TIMEOUT ${fptu7_compare_timeout} SOURCE 7compare.cxx shuffle6.hpp LIBRARY fptu)
add_ut(fptu8_emit2json TIMEOUT ${fptu8_emit_timeout} SOURCE 8emit2json.cxx LIBRARY fptu)

# add_perf_test(abc_perf TIMEOUT 60 LIBRARY fptu)
# add_long_test(xyz_long TIMEOUT 600 LIBRARY fptu)

add_executable(fptu_c_mode c_mode.c)
target_link_libraries(fptu_c_mode fptu)
if(LIBFPTU_TYPE STREQUAL "PILE")
  set_target_properties(fptu_c_mode PROPERTIES LINKER_LANGUAGE CXX)
endif()
