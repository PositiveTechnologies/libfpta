name: Coverity

on:
  push:
    branches: coverity_scan
    paths-ignore:
    - '.circleci/**'
    - '.github/actions/spelling/**'
    - 'docs/**'
    - 'packages**'
    - .cirrus.yml
    - .clang-format
    - .gitignore
    - .travis.yml
    - AUTHORS
    - COPYRIGHT
    - ChangeLog.md
    - LICENSE
    - README.md
    - appveyor.yml

env:
  COVERITY_SCAN_PROJECT_NAME: 'leo-yuriev/libfpta'
  COVERITY_SCAN_TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
  COVERITY_SCAN_BUILD_COMMAND: 'make -C @build'
  COVERITY_SCAN_NOTIFICATION_EMAIL: 'leo@yuriev.ru'
  COVERITY_UNSUPPORTED_COMPILER_INVOCATION: 1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: fetch tags
      run: git fetch --unshallow --tags --prune --force
    - name: Download Coverity Build Tool
      run: |
        wget -q https://scan.coverity.com/download/cxx/linux64 --post-data "token=$COVERITY_SCAN_TOKEN&project=$COVERITY_SCAN_PROJECT_NAME" -O cov-analysis-linux64.tar.gz
        mkdir cov-analysis-linux64
        tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
    - name: Configure build with CMake
      run: |
         mkdir @build
         cd @build
         cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_STANDARD=17 ..
    - name: Build with cov-build
      run: |
        export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
        cov-build --dir cov-int $COVERITY_SCAN_BUILD_COMMAND
    - name: Submit the result to Coverity Scan
      run: |
        tar czvf libmdbx.tgz cov-int
        curl \
          --form project=$COVERITY_SCAN_PROJECT_NAME \
          --form token=$COVERITY_SCAN_TOKEN \
          --form email=$COVERITY_SCAN_NOTIFICATION_EMAIL \
          --form file=@libmdbx.tgz \
          --form version=$GITHUB_SHA \
          --form description="GithubActionCI $GITHUB_ACTION" \
            https://scan.coverity.com/builds?project=$COVERITY_SCAN_PROJECT_NAME
